 
logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){yellow} %clr(%-5level){blue} %clr([%thread]){magenta} %clr(%logger{36}){cyan} - %msg%n"
  level:
     com:
        sayem:
           accounts: DEBUG
 
server:
  port: 8080
spring:
  config:
#    import:
#     - "application_qa.yml"
#     - "application_prod.yml"
    import: "optional:configserver:http://localhost:8071/"
  profiles:
    active:
      - "prod"
  application:
    name: accounts
  datasource:
    url: jdbc:mysql://localhost:3306/accountsdb
#    driverClassName: org.h2.Driver
    username: root
    password: root
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
#  sql:
#    init:
#      mode: always

#  rabbitmq:
#    host: "localhost"
#    port: 5672
#    username: "guest"
#    password: "guest"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000 
      
      
resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 3
      waitDuration: 100
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2 
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException # when this is there then no need to mention in the ignoreExceptions part
                                                # as retry will only happen for this type of excepiotn
    
    
build:
  version: 3.0

accounts:
  message: "Welcome to Accounts app"
  contactDetails:
    name: John Doe
    email: jhn@example.com
  onCallSupport:
   - 555-555-555
   - 888-888-888


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/
   
info:
  app:
    name: "accounts"
    description: "Accounts Application"
    version: "1.0.0"
