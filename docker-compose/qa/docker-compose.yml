version: "3.8"

services:
#  rabbit:
#    image: rabbitmq:4-management
#    hostname: rabbitmq
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    healthcheck:
#      test: rabbitmq-diagnostics check_port_connectivity
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 10s
#    networks:
#      - microservice

  accountsdb:
    image: mysql
    container_name: accountsdb
    ports:
     - 3307:3306
    healthcheck: 
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: accountsdb
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservice
  
  
  loansdb:
    image: mysql
    container_name: loansdb
    ports:
     - 3309:3306
    healthcheck: 
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: loansdb
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservice
  
  
  cardsdb:
    image: mysql
    container_name: cardsdb
    ports:
     - 3308:3306
    healthcheck: 
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cardsdb
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservice
  
  
  config-server:
    image: "sayemx/configserver:s7"
    container_name: config-server
    ports:
      - "8071:8071"
    depends_on:
      rabbit:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservice
   
     
  accounts-service:
    image: "sayemx/accounts-service:s7"
    container_name: accounts-service
    ports:
      - "8080:8080"
    depends_on: 
      config-server:
        condition: service_healthy
      accountsdb:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservice
    environment:
      SPRING_APPLICATION_NAME: accounts
      SPRING_CONFIG_IMPORT: "configserver:http://config-server:8071/"
      SPRING_PROFILES_ACTIVE: qa
      SPRING_RABBITMQ_HOST: "rabbit"
      SPRING_DATASOURCE_URL: "jdbc:mysql://accountsdb:3306/accountsdb"
  
  
  loans-service:
    image: "sayemx/loans-service:s7"
    container_name: loans-service
    ports:
      - "8090:8090"
    depends_on: 
      config-server:
        condition: service_healthy
      loansdb:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservice
    environment:
      SPRING_APPLICATION_NAME: loans
      SPRING_CONFIG_IMPORT: "configserver:http://config-server:8071/"
      SPRING_PROFILES_ACTIVE: qa
      SPRING_RABBITMQ_HOST: "rabbit"
      SPRING_DATASOURCE_URL: "jdbc:mysql://loansdb:3306/loansdb"
      
      
  cards-service:
    image: "sayemx/cards-service:s7"
    container_name: cards-service
    ports:
      - "9000:9000"
    depends_on: 
      config-server:
        condition: service_healthy
      cardsdb:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservice
    environment:
      SPRING_APPLICATION_NAME: cards
      SPRING_CONFIG_IMPORT: "configserver:http://config-server:8071/"
      SPRING_PROFILES_ACTIVE: qa
      SPRING_RABBITMQ_HOST: "rabbit"
      SPRING_DATASOURCE_URL: "jdbc:mysql://cardsdb:3306/cardsdb"


networks:
  microservice:
    driver: bridge
